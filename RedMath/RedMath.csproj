<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{83191B58-C0E0-4299-ADCC-762595EB50B0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>RedMath</RootNamespace>
    <AssemblyName>RedMath</AssemblyName>
    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>TRACE;DEBUG;GPU_SUPPORT</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;GPU_SUPPORT</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <!-- C# source files -->
    <Compile Include="Algebra.cs" />
    <Compile Include="Calculus\Function.cs" />
    <Compile Include="Calculus\IDifferentiableFunction.cs" />
    <Compile Include="Calculus\IParametricallyDifferentiableFunction.cs" />
    <Compile Include="Calculus\Monomial.cs" />
    <Compile Include="Calculus\ParametricFunction.cs" />
    <Compile Include="FFT.cs" />
    <Compile Include="Gpu\GpuField.cs" Condition="$(DefineConstants.Contains(GPU_SUPPORT))" />
    <Compile Include="HighPerformance\Cpu\CpuMatrixMultiplication.cs" />
    <Compile Include="HighPerformance\Gpu\GpuMatrixMultiplication.cs" Condition="$(DefineConstants.Contains(GPU_SUPPORT))" />
    <Compile Include="LinearAlgebra\VectorExtensions.cs" />
    <Compile Include="LinearAlgebra\Matrix.cs" />
    <Compile Include="LinearAlgebra\LUPDecomposition.cs" />
    <Compile Include="LinearAlgebra\MatrixOperations.cs" />
    <Compile Include="LinearAlgebra\LinearTransformations.cs" />
    <Compile Include="LinearAlgebra\Vector.cs" />
    <Compile Include="LinearAlgebra\VectorSpace.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Structures\Complex.cs" />
    <Compile Include="Structures\Expression\ExpressionNode.cs" />
    <Compile Include="Structures\Field.cs" />
    <Compile Include="Gpu\GpuComplex.cs" Condition="$(DefineConstants.Contains(GPU_SUPPORT))" />
    <Compile Include="Gpu\GpuRational.cs" Condition="$(DefineConstants.Contains(GPU_SUPPORT))" />
    <Compile Include="Gpu\GpuReal.cs" Condition="$(DefineConstants.Contains(GPU_SUPPORT))" />
    <Compile Include="Structures\GF5.cs" />
    <Compile Include="Structures\Rational.cs" />
    <Compile Include="Structures\Real.cs" />
    <Compile Include="Utils\MultiIndex.cs" />
    <Compile Include="Utils\Utilities.cs" />
    <Compile Include="Utils\Cache.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(DefineConstants.Contains(GPU_SUPPORT))">
    <!-- AleaGPU references -->
    <Reference Include="Alea, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ba52afc3c2e933d6, processorArchitecture=MSIL">
      <HintPath>..\packages\Alea.3.0.4\lib\net45\Alea.dll</HintPath>
    </Reference>
    <Reference Include="Alea.IL, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ba52afc3c2e933d6, processorArchitecture=MSIL">
      <HintPath>..\packages\Alea.3.0.4\lib\net45\Alea.IL.dll</HintPath>
    </Reference>
    <Reference Include="Alea.Parallel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=ba52afc3c2e933d6, processorArchitecture=MSIL">
      <HintPath>..\packages\Alea.3.0.4\lib\net45\Alea.Parallel.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <!-- Standard references -->
    <Reference Include="System" />
  </ItemGroup>
  <ItemGroup>
    <!-- All empty folders -->
    <Folder Include="Geometry\" />
  </ItemGroup>
  <ItemGroup>
    <!-- NuGet packages include -->
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup Condition="$(DefineConstants.Contains(GPU_SUPPORT))">
    <!-- AleaGPU specific files -->
    <Content Include="FodyWeavers.xml" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\packages\Alea.3.0.4\build\Alea.targets" Condition="$(DefineConstants.Contains(GPU_SUPPORT)) And Exists('..\packages\Alea.3.0.4\build\Alea.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\Alea.3.0.4\build\Alea.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Alea.3.0.4\build\Alea.targets'))" />
    <Error Condition="!Exists('..\packages\Fody.1.29.4\build\dotnet\Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Fody.1.29.4\build\dotnet\Fody.targets'))" />
  </Target>
  <Import Project="..\packages\Fody.1.29.4\build\dotnet\Fody.targets" Condition="$(DefineConstants.Contains(GPU_SUPPORT)) And Exists('..\packages\Fody.1.29.4\build\dotnet\Fody.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>